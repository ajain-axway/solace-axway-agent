name: main-build-workflow
on:
  # for testing
  workflow_dispatch:

  push:
    branches:
      - develop
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: solace-iot-team/solace-axway-agent
  VERSION: "0.0.0"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_URL }}
          method: approle
          namespace: ${{ secrets.VAULT_NAMESPACE }}
          roleId: ${{ secrets.VAULT_ROLEID }}
          secretId: ${{ secrets.VAULT_SECRETID }}
          secrets: |
            secret/data/sol/async/agent/ci CENTRAL_AUTH_PUBLICKEY_DATA | CENTRAL_AUTH_PUBLICKEY_DATA ;
            secret/data/sol/async/agent/ci CENTRAL_AUTH_PRIVATEKEY_DATA | CENTRAL_AUTH_PRIVATEKEY_DATA ;
            secret/data/sol/async/agent/ci CENTRAL_AUTH_CLIENTID | CENTRAL_AUTH_CLIENTID ;
            secret/data/sol/async/agent/ci CENTRAL_ENVIRONMENT | CENTRAL_ENVIRONMENT ;
            secret/data/sol/async/agent/ci CENTRAL_ORGANIZATIONID | CENTRAL_ORGANIZATIONID ;
            secret/data/sol/async/agent/ci CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_AUTHTYPE | CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_AUTHTYPE ;
            secret/data/sol/async/agent/ci CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_FROMADDRESS | CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_FROMADDRESS ;
            secret/data/sol/async/agent/ci CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_HOST | CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_HOST ;
            secret/data/sol/async/agent/ci CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_PASSWORD | CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_PASSWORD ;
            secret/data/sol/async/agent/ci CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_PORT | CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_PORT ;
            secret/data/sol/async/agent/ci CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_USERNAME | CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_SMTP_USERNAME ;
            secret/data/sol/async/agent/ci CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_TYPE | CENTRAL_SUBSCRIPTIONS_NOTIFICATIONS_TYPE ;
            secret/data/sol/async/agent/ci CENTRAL_URL | CENTRAL_URL ;
            secret/data/sol/async/agent/ci CONNECTOR_URL | CONNECTOR_URL ;
            secret/data/sol/async/agent/ci CONNECTOR_ACCEPTINSECURECERTIFICATES | CONNECTOR_ACCEPTINSECURECERTIFICATES ;
            secret/data/sol/async/agent/ci CONNECTOR_ADMINPASSWORD | CONNECTOR_ADMINPASSWORD ;
            secret/data/sol/async/agent/ci CONNECTOR_ADMINUSER | CONNECTOR_ADMINUSER ;
            secret/data/sol/async/agent/ci CONNECTOR_ORGPASSWORD | CONNECTOR_ORGPASSWORD ;
            secret/data/sol/async/agent/ci CONNECTOR_ORGUSER | CONNECTOR_ORGUSER ;
            secret/data/sol/async/agent/ci CONNECTOR_ORGUSER | CONNECTOR_ORGUSER ;
            secret/data/sol/async/agent/ci NOTIFIER_ACCEPTINSECURECERTIFICATES | NOTIFIER_ACCEPTINSECURECERTIFICATES ;
            secret/data/sol/async/agent/ci NOTIFIER_APIAUTHTYPE | NOTIFIER_APIAUTHTYPE ;
            secret/data/sol/async/agent/ci NOTIFIER_APICONSUMERKEY | NOTIFIER_APICONSUMERKEY ;
            secret/data/sol/async/agent/ci NOTIFIER_APICONSUMERSECRET | NOTIFIER_APICONSUMERSECRET ;
            secret/data/sol/async/agent/ci NOTIFIER_ENABLED | NOTIFIER_ENABLED ;
            secret/data/sol/async/agent/ci NOTIFIER_HEALTHMESSAGE | NOTIFIER_HEALTHMESSAGE ;
            secret/data/sol/async/agent/ci NOTIFIER_URL | NOTIFIER_URL ;
            secret/data/sol/async/agent/ci INTEGRATIONTEST_ORG | INTEGRATIONTEST_ORG ;
            secret/data/sol/async/agent/ci INTEGRATIONTEST_ORGTOKEN | INTEGRATIONTEST_ORGTOKEN
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.15'
      - run: |
          go version
          go get -u golang.org/x/lint/golint


      - name: build it
        run: |
          export CENTRAL_AUTH_PUBLICKEY=$RUNNER_TEMP/public
          export CENTRAL_AUTH_PRIVATEKEY=$RUNNER_TEMP/private
          make dep
          make build
          make integrationtest

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [build]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v2

      - name: Set versions properties
        run:  |
          VERSION=$(<version)
          echo "VERSION=$VERSION">> $GITHUB_ENV
          echo "VERSION: $VERSION"

      - name: Build and Deploy to Github Docker registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{env.IMAGE_NAME}}:alpha
            ghcr.io/${{env.IMAGE_NAME}}:${{env.VERSION}}